{"remainingRequest":"C:\\Users\\Jesse\\Documents\\GitHub\\Zeepin-TS-Sdk\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Jesse\\Documents\\GitHub\\Zeepin-TS-Sdk\\packages\\index.js","dependencies":[{"path":"C:\\Users\\Jesse\\Documents\\GitHub\\Zeepin-TS-Sdk\\packages\\index.js","mtime":1601302458170},{"path":"C:\\Users\\Jesse\\Documents\\GitHub\\Zeepin-TS-Sdk\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Jesse\\Documents\\GitHub\\Zeepin-TS-Sdk\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Promise from \"C:\\\\Users\\\\Jesse\\\\Documents\\\\GitHub\\\\Zeepin-TS-Sdk\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"C:\\\\Users\\\\Jesse\\\\Documents\\\\GitHub\\\\Zeepin-TS-Sdk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Jesse\\\\Documents\\\\GitHub\\\\Zeepin-TS-Sdk\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport { Wallet } from \"./sdk/wallet/wallet\";\nimport { keystoreCheck } from \"./sdk/common/functionsUtils\";\nimport { resultParams } from \"./sdk/common/classesUtils\";\nimport RestClient from \"./sdk/network/rest/restClient\";\nimport { CONTRACTS_TEST, CONTRACTS_MAIN } from \"./sdk/common/consts\";\nimport { Address } from \"./sdk/wallet/address\";\nimport { getContractBalance, wasmTransfer as _wasmTransfer } from \"./sdk/transaction/wasmTransaction\";\nimport { nativeTransfer as _nativeTransfer } from \"./sdk/transaction/nativeTransaction\";\nimport RpcClient from \"./sdk/network/rpc/rpcClient\";\nimport { ERROR_CODE } from \"./sdk/common/error\";\nvar myUrl = \"http://192.168.199.244:20334\";\nvar contracts;\n\nvar Zeepin =\n/*#__PURE__*/\nfunction () {\n  function Zeepin() {\n    _classCallCheck(this, Zeepin);\n  }\n\n  _createClass(Zeepin, null, [{\n    key: \"setUrl\",\n    value: function setUrl(url) {\n      myUrl = \"\".concat(url);\n    }\n  }, {\n    key: \"getUrl\",\n    value: function getUrl() {\n      return myUrl;\n    }\n    /**\r\n     * 创建钱包\r\n     *\r\n     * password: 账户密码\r\n     * 返回钱包地址、keystore、私钥\r\n     */\n\n  }, {\n    key: \"createWallet\",\n    value: function createWallet(password) {\n      var wallet = Wallet.createWallet(password);\n      var obj = {\n        address: wallet.accounts[0].address.toBase58(),\n        keystore: wallet.toJsonObj(),\n        privateKey: wallet.accounts[0].exportPrivateKey(password).key\n      };\n      return obj;\n    }\n    /**\r\n     * 从私钥导入钱包\r\n     *\r\n     * password: 账户密码\r\n     * privateKey: 私钥\r\n     * 返回钱包地址、keystore、私钥\r\n     */\n\n  }, {\n    key: \"importByPrivateKey\",\n    value: function importByPrivateKey(password, privateKey) {\n      var wallet = Wallet.importWalletByPrivateKey(password, privateKey);\n      var obj = {\n        address: wallet.accounts[0].address.toBase58(),\n        keystore: wallet.toJsonObj(),\n        privateKey: wallet.accounts[0].exportPrivateKey(password).key\n      };\n      return obj;\n    }\n    /**\r\n     * 从keystore导入钱包\r\n     *\r\n     * password: 账户密码\r\n     * 返回钱包地址、keystore、私钥\r\n     */\n\n  }, {\n    key: \"importByKeystore\",\n    value: function importByKeystore(password, keystore) {\n      keystoreCheck(keystore);\n      var wallet = Wallet.importWalletByKeystore(password, keystore);\n      var obj = {\n        address: wallet.accounts[0].address.toBase58(),\n        keystore: wallet.toJsonObj(),\n        privateKey: wallet.accounts[0].exportPrivateKey(password, keystore.scrypt.n).key\n      };\n      return obj;\n    }\n    /**\r\n     * 更改钱包密码\r\n     *\r\n     * 返回钱包地址、keystore、私钥\r\n     */\n\n  }, {\n    key: \"modifyPassword\",\n    value: function modifyPassword(oldPassword, newPassword, keystore) {\n      keystoreCheck(keystore);\n      var wallet = Wallet.modifyPassword(oldPassword, newPassword, keystore);\n      var obj = {\n        address: wallet.accounts[0].address.toBase58(),\n        keystore: wallet.toJsonObj(),\n        privateKey: wallet.accounts[0].exportPrivateKey(newPassword).key\n      };\n      return obj;\n    }\n    /**\r\n     * 查询ZPT和Gala余额\r\n     *\r\n     * address: 账户地址\r\n     */\n\n  }, {\n    key: \"balanceOfNative\",\n    value: function balanceOfNative(address) {\n      var rest = new RestClient(myUrl);\n      var result = [];\n      return new _Promise(function (resolve, reject) {\n        rest.getBalance(new Address(address)).then(function (res) {\n          var param1 = new resultParams();\n          param1.name = 'zpt';\n          param1.value = res.Result.zpt;\n          result.push(param1);\n          var param2 = new resultParams();\n          param2.name = 'gala';\n          param2.value = res.Result.gala;\n          result.push(param2);\n          resolve(result);\n        });\n      });\n    }\n    /**\r\n     * 查询ZUSD和7种矿石余额\r\n     *\r\n     * address: 账户地址\r\n     */\n\n  }, {\n    key: \"balanceOfOthers\",\n    value: function balanceOfOthers(address) {\n      var result = [];\n      if (myUrl === \"http://192.168.199.244:20334\" || myUrl === \"http://test1.zeepin.net\") contracts = CONTRACTS_TEST;else contracts = CONTRACTS_MAIN;\n      console.log(contracts);\n      return new _Promise(function (resolve, reject) {\n        var _loop = function _loop(i) {\n          getContractBalance(myUrl, contracts[i].contractAddr, address).then(function (res) {\n            var param = new resultParams();\n            param.name = contracts[i].name;\n            param.value = res;\n            result.push(param);\n            if (result.length === contracts.length) resolve(result);\n          });\n        };\n\n        for (var i = 0; i < contracts.length; i++) {\n          _loop(i);\n        }\n      });\n    }\n    /**\r\n     * zpt和gala转账交易\r\n     *\r\n     * tokenType: 'zpt'或'gala',小写, string\r\n     * from: 转出地址, string\r\n     * to: 转入地址, string\r\n     * amount: 转账金额(精度10000，如：需转账10，应填入100000), string\r\n     * fromKey: 转出账户私钥, string\r\n     */\n\n  }, {\n    key: \"nativeTransfer\",\n    value: function nativeTransfer(tokenType, from, to, amount, fromKey, payer) {\n      return new _Promise(function (resolve, reject) {\n        var rest = new RestClient(myUrl);\n\n        var TxString = _nativeTransfer(tokenType, from, to, amount, '1', '20000', fromKey, payer);\n\n        rest.sendRawTransaction(TxString).then(function (res) {\n          if (typeof res.Result === 'string' && res.Result.length === 64) {\n            var timer = setInterval(function () {\n              rest.getSmartCodeEvent(res.Result).then(function (getRes) {\n                if (getRes.Result !== null && getRes.Result !== '') {\n                  clearInterval(timer);\n                  timer = null;\n                  if (getRes.Result.State === 1) resolve(true);else reject(false);\n                }\n              });\n            }, 1000);\n          } else {\n            reject(false);\n          }\n        });\n      });\n    }\n    /**\r\n     * zusd和7种矿石转账交易\r\n     *\r\n     * tokenType: 'zusd'或7种矿石名,小写, string\r\n     * from: 转出地址, string\r\n     * to: 转入地址, string\r\n     * amount: 转账金额(精度10000，如：需转账10，应填入100000), string\r\n     * fromKey: 转出账户私钥, string\r\n     */\n\n  }, {\n    key: \"wasmTransfer\",\n    value: function wasmTransfer(tokenType, from, to, amount, fromKey, payer) {\n      if (myUrl === \"http://192.168.199.244:20334\" || myUrl === \"http://test1.zeepin.net\") contracts = CONTRACTS_TEST;else contracts = CONTRACTS_MAIN;\n      var contractAddr = '';\n\n      for (var i = 0; i < contracts.length; i++) {\n        if (tokenType === contracts[i].name) {\n          contractAddr = contracts[i].contractAddr;\n          break;\n        }\n      }\n\n      if (contractAddr === '') {\n        throw ERROR_CODE.INVALID_PARAMS;\n      }\n\n      return new _Promise(function (resolve, reject) {\n        var rest = new RestClient(myUrl);\n\n        var TxString = _wasmTransfer(contractAddr, from, to, amount, '1', '20000', fromKey, payer);\n\n        rest.sendRawTransaction(TxString).then(function (res) {\n          if (typeof res.Result === 'string' && res.Result.length === 64) {\n            var timer = setInterval(function () {\n              rest.getSmartCodeEvent(res.Result).then(function (getRes) {\n                if (getRes.Result !== null && getRes.Result !== '') {\n                  clearInterval(timer);\n                  timer = null;\n                  if (getRes.Result.State === 1 && getRes.Result.Notify[0].States[0].length > 10) resolve(true);else reject(false);\n                }\n              });\n            }, 1000);\n          } else {\n            reject(false);\n          }\n        });\n      });\n    }\n    /**\r\n     * 返回签名后的交易zpt/gala\r\n     *\r\n     * tokenType: 'zpt'或'gala',小写, string\r\n     * from: 转出地址, string\r\n     * to: 转入地址, string\r\n     * amount: 转账金额(精度10000，如：需转账10，应填入100000), string\r\n     * fromKey: 转出账户私钥, string\r\n     */\n\n  }, {\n    key: \"nativeTransferStr\",\n    value: function nativeTransferStr(tokenType, from, to, amount, fromKey, payer) {\n      return _nativeTransfer(tokenType, from, to, amount, '1', '20000', fromKey, payer);\n    }\n    /**\r\n     * 返回签名后的交易zust/七种矿石\r\n     *\r\n     * tokenType: 'zusd'或7种矿石名,小写, string\r\n     * from: 转出地址, string\r\n     * to: 转入地址, string\r\n     * amount: 转账金额(精度10000，如：需转账10，应填入100000), string\r\n     * fromKey: 转出账户私钥, string\r\n     */\n\n  }, {\n    key: \"wasmTransferStr\",\n    value: function wasmTransferStr(tokenType, from, to, amount, fromKey, payer) {\n      return _wasmTransfer(tokenType, from, to, amount, '1', '20000', fromKey, payer);\n    }\n  }]);\n\n  return Zeepin;\n}();\n\nexport { Zeepin as default };",{"version":3,"sources":["C:\\Users\\Jesse\\Documents\\GitHub\\Zeepin-TS-Sdk\\packages\\index.js"],"names":["Wallet","keystoreCheck","resultParams","RestClient","CONTRACTS_TEST","CONTRACTS_MAIN","Address","getContractBalance","wasmTransfer","nativeTransfer","RpcClient","ERROR_CODE","myUrl","contracts","Zeepin","url","password","wallet","createWallet","obj","address","accounts","toBase58","keystore","toJsonObj","privateKey","exportPrivateKey","key","importWalletByPrivateKey","importWalletByKeystore","scrypt","n","oldPassword","newPassword","modifyPassword","rest","result","resolve","reject","getBalance","then","res","param1","name","value","Result","zpt","push","param2","gala","console","log","i","contractAddr","param","length","tokenType","from","to","amount","fromKey","payer","TxString","sendRawTransaction","timer","setInterval","getSmartCodeEvent","getRes","clearInterval","State","INVALID_PARAMS","Notify","States"],"mappings":"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","sourcesContent":["import { Wallet } from \"./sdk/wallet/wallet\"\r\nimport { keystoreCheck } from \"./sdk/common/functionsUtils\";\r\nimport { resultParams } from \"./sdk/common/classesUtils\";\r\nimport RestClient from \"./sdk/network/rest/restClient\";\r\nimport { CONTRACTS_TEST, CONTRACTS_MAIN } from \"./sdk/common/consts\";\r\nimport { Address } from \"./sdk/wallet/address\";\r\nimport { getContractBalance, wasmTransfer } from \"./sdk/transaction/wasmTransaction\";\r\nimport { nativeTransfer } from \"./sdk/transaction/nativeTransaction\";\r\nimport RpcClient from \"./sdk/network/rpc/rpcClient\";\r\nimport {ERROR_CODE} from \"./sdk/common/error\";\r\n\r\n\r\nlet myUrl = `http://192.168.199.244:20334`;\r\nlet contracts;\r\n\r\nexport default class Zeepin {\r\n\r\n    static setUrl(url) {\r\n        myUrl = `${url}`;\r\n    }\r\n\r\n    static getUrl() {\r\n        return myUrl;\r\n    }\r\n\r\n    /**\r\n     * 创建钱包\r\n     *\r\n     * password: 账户密码\r\n     * 返回钱包地址、keystore、私钥\r\n     */\r\n    static createWallet(password) {\r\n        let wallet = Wallet.createWallet(password);\r\n        let obj = {\r\n            address: wallet.accounts[0].address.toBase58(),\r\n            keystore: wallet.toJsonObj(),\r\n            privateKey: wallet.accounts[0].exportPrivateKey(password).key\r\n        }\r\n        return obj\r\n    }\r\n\r\n\r\n    /**\r\n     * 从私钥导入钱包\r\n     *\r\n     * password: 账户密码\r\n     * privateKey: 私钥\r\n     * 返回钱包地址、keystore、私钥\r\n     */\r\n    static importByPrivateKey(password, privateKey) {\r\n        let wallet = Wallet.importWalletByPrivateKey(password, privateKey);\r\n        let obj = {\r\n            address: wallet.accounts[0].address.toBase58(),\r\n            keystore: wallet.toJsonObj(),\r\n            privateKey: wallet.accounts[0].exportPrivateKey(password).key\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    /**\r\n     * 从keystore导入钱包\r\n     *\r\n     * password: 账户密码\r\n     * 返回钱包地址、keystore、私钥\r\n     */\r\n    static importByKeystore(password, keystore) {\r\n        keystoreCheck(keystore);\r\n        let wallet = Wallet.importWalletByKeystore(password, keystore);\r\n        let obj = {\r\n            address: wallet.accounts[0].address.toBase58(),\r\n            keystore: wallet.toJsonObj(),\r\n            privateKey: wallet.accounts[0].exportPrivateKey(password,keystore.scrypt.n).key\r\n        }\r\n        return obj;\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * 更改钱包密码\r\n     *\r\n     * 返回钱包地址、keystore、私钥\r\n     */\r\n    static modifyPassword(oldPassword, newPassword, keystore) {\r\n        keystoreCheck(keystore);\r\n        let wallet = Wallet.modifyPassword(oldPassword, newPassword, keystore);\r\n        let obj = {\r\n            address: wallet.accounts[0].address.toBase58(),\r\n            keystore: wallet.toJsonObj(),\r\n            privateKey: wallet.accounts[0].exportPrivateKey(newPassword).key\r\n        }\r\n        return obj;\r\n    }\r\n\r\n\r\n    /**\r\n     * 查询ZPT和Gala余额\r\n     *\r\n     * address: 账户地址\r\n     */\r\n    static balanceOfNative(address) {\r\n        const rest = new RestClient(myUrl);\r\n        let result = [];\r\n        return new Promise((resolve, reject) => {\r\n            rest.getBalance(new Address(address)).then((res) => {\r\n                let param1 = new resultParams();\r\n                param1.name = 'zpt';\r\n                param1.value = res.Result.zpt;\r\n                result.push(param1);\r\n                let param2 = new resultParams();\r\n                param2.name = 'gala';\r\n                param2.value = res.Result.gala;\r\n                result.push(param2);\r\n                resolve(result);\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * 查询ZUSD和7种矿石余额\r\n     *\r\n     * address: 账户地址\r\n     */\r\n    static balanceOfOthers(address) {\r\n        let result = [];\r\n        if(myUrl === `http://192.168.199.244:20334` || myUrl === `http://test1.zeepin.net`)\r\n            contracts = CONTRACTS_TEST;\r\n        else\r\n            contracts = CONTRACTS_MAIN;\r\n        console.log(contracts);\r\n        return new Promise((resolve, reject) => {\r\n            for (let i = 0; i < contracts.length; i++) {\r\n                getContractBalance(myUrl, contracts[i].contractAddr , address).then((res) => {\r\n                    let param = new resultParams();\r\n                    param.name = contracts[i].name;\r\n                    param.value = res;\r\n                    result.push(param);\r\n                    if(result.length === contracts.length)\r\n                        resolve(result);\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * zpt和gala转账交易\r\n     *\r\n     * tokenType: 'zpt'或'gala',小写, string\r\n     * from: 转出地址, string\r\n     * to: 转入地址, string\r\n     * amount: 转账金额(精度10000，如：需转账10，应填入100000), string\r\n     * fromKey: 转出账户私钥, string\r\n     */\r\n    static nativeTransfer(tokenType, from, to, amount, fromKey, payer) {\r\n        return new Promise((resolve, reject) => {\r\n            const rest = new RestClient(myUrl);\r\n            const TxString = nativeTransfer(tokenType, from, to, amount, '1', '20000', fromKey, payer);\r\n            rest.sendRawTransaction(TxString).then((res) => {\r\n                if(typeof res.Result === 'string' && res.Result.length === 64) {\r\n                    let timer = setInterval(() => {\r\n                        rest.getSmartCodeEvent(res.Result).then((getRes) => {\r\n                            if(getRes.Result !== null && getRes.Result !== '') {\r\n                                clearInterval(timer);\r\n                                timer = null;\r\n                                if(getRes.Result.State === 1)\r\n                                    resolve(true);\r\n                                else\r\n                                    reject(false);\r\n                            }\r\n                        })\r\n                    }, 1000)\r\n                } else {\r\n                    reject(false);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * zusd和7种矿石转账交易\r\n     *\r\n     * tokenType: 'zusd'或7种矿石名,小写, string\r\n     * from: 转出地址, string\r\n     * to: 转入地址, string\r\n     * amount: 转账金额(精度10000，如：需转账10，应填入100000), string\r\n     * fromKey: 转出账户私钥, string\r\n     */\r\n    static wasmTransfer(tokenType, from, to, amount, fromKey, payer) {\r\n        if(myUrl === `http://192.168.199.244:20334` || myUrl === `http://test1.zeepin.net`)\r\n            contracts = CONTRACTS_TEST;\r\n        else\r\n            contracts = CONTRACTS_MAIN;\r\n        let contractAddr = '';\r\n        for (let i = 0; i < contracts.length; i++) {\r\n            if(tokenType === contracts[i].name) {\r\n                contractAddr = contracts[i].contractAddr;\r\n                break;\r\n            }\r\n        }\r\n        if(contractAddr === '') {\r\n            throw ERROR_CODE.INVALID_PARAMS;\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const rest = new RestClient(myUrl);\r\n            const TxString = wasmTransfer(contractAddr, from, to, amount, '1', '20000', fromKey, payer);\r\n            rest.sendRawTransaction(TxString).then((res) => {\r\n                if(typeof res.Result === 'string' && res.Result.length === 64) {\r\n                    let timer = setInterval(() => {\r\n                        rest.getSmartCodeEvent(res.Result).then((getRes) => {\r\n                            if(getRes.Result !== null && getRes.Result !== '') {\r\n                                clearInterval(timer);\r\n                                timer = null;\r\n                                if(getRes.Result.State === 1 && getRes.Result.Notify[0].States[0].length > 10)\r\n                                    resolve(true);\r\n                                else\r\n                                    reject(false);\r\n                            }\r\n                        })\r\n                    }, 1000)\r\n                } else {\r\n                    reject(false);\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    /**\r\n     * 返回签名后的交易zpt/gala\r\n     *\r\n     * tokenType: 'zpt'或'gala',小写, string\r\n     * from: 转出地址, string\r\n     * to: 转入地址, string\r\n     * amount: 转账金额(精度10000，如：需转账10，应填入100000), string\r\n     * fromKey: 转出账户私钥, string\r\n     */\r\n    static nativeTransferStr(tokenType, from, to, amount, fromKey, payer) {\r\n        return nativeTransfer(tokenType, from, to, amount, '1', '20000', fromKey, payer);\r\n    }\r\n\r\n\r\n    /**\r\n     * 返回签名后的交易zust/七种矿石\r\n     *\r\n     * tokenType: 'zusd'或7种矿石名,小写, string\r\n     * from: 转出地址, string\r\n     * to: 转入地址, string\r\n     * amount: 转账金额(精度10000，如：需转账10，应填入100000), string\r\n     * fromKey: 转出账户私钥, string\r\n     */\r\n    static wasmTransferStr(tokenType, from, to, amount, fromKey, payer) {\r\n        return wasmTransfer(tokenType, from, to, amount, '1', '20000', fromKey, payer);\r\n    }\r\n}\r\n"]}]}